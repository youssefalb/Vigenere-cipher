/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pl.polsl.youssef.albali.vigenere.cipher.view;
import pl.polsl.youssef.albali.vigenere.cipher.controller.VigenereCipherController;

import java.awt.*;

/**
 * View window class responsible of interacting with the user
 * @author youssef albali
 * @version 1.0
 */
public class VigenereCipherGui extends javax.swing.JPanel {
    
    
    VigenereCipherController controller;
    /**
     * Creates new form VigenereCipherGui
     */
    public VigenereCipherGui() {
        super(new BorderLayout());
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageInput = new javax.swing.JTextField();
        keyInput = new javax.swing.JTextField();
        encryptButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        messageInput.setForeground(new java.awt.Color(128, 128, 128));
        messageInput.setText("Enter the message");
        messageInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                messageInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                messageInputFocusLost(evt);
            }
        });

        keyInput.setForeground(new java.awt.Color(128, 128, 128));
        keyInput.setText("Enter the key");
        keyInput.setToolTipText("");
        keyInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keyInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keyInputFocusLost(evt);
            }
        });

        encryptButton.setText("Encrypt");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(encryptButton)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(keyInput)
                            .addComponent(messageInput, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(messageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(keyInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(encryptButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        keyInput.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void keyInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyInputFocusGained
        if (keyInput.getText().equals("Enter the key")) {
            keyInput.setForeground(Color.BLACK);
            keyInput.setText("");
        }
    }//GEN-LAST:event_keyInputFocusGained

    private void keyInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keyInputFocusLost
        if (keyInput.getText().isEmpty()) {
            keyInput.setForeground(Color.GRAY);
            keyInput.setText("Enter the key");
        }
    }//GEN-LAST:event_keyInputFocusLost

    private void messageInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_messageInputFocusGained
        if (messageInput.getText().equals("Enter the message")) { //cnst
            messageInput.setForeground(Color.BLACK);
            messageInput.setText("");
        }
    }//GEN-LAST:event_messageInputFocusGained

    private void messageInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_messageInputFocusLost
        if (messageInput.getText().isEmpty()) {
            messageInput.setForeground(Color.GRAY);
            messageInput.setText("Enter the message"); //cnst
        }
    }//GEN-LAST:event_messageInputFocusLost

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        try{   
            controller =  new VigenereCipherController();
            controller.encryptMessageAfterClick(keyInput.getText(), messageInput.getText());
            errorLabel.setText("");
        }
        catch(Exception ex){
            errorLabel.setText(ex.getMessage());
        }
    }//GEN-LAST:event_encryptButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton encryptButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField keyInput;
    private javax.swing.JTextField messageInput;
    // End of variables declaration//GEN-END:variables
}
